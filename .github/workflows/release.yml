name: Build and Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Matches version tags like 1.0.0, 2.3.4, etc.

permissions:
  contents: write
  packages: write
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_URL: "https://nuget.pkg.github.com/dend/index.json"

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x  # Using .NET 9.0 as specified in your csproj
          source-url: ${{ env.NUGET_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
          
      - name: Restore dependencies
        run: dotnet restore OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP.sln
        
      - name: Build
        run: dotnet build OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP.sln --configuration Release --no-restore
        
      - name: Test
        run: dotnet test OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP.sln --configuration Release --no-build --verbosity normal
        
      - name: Publish Windows
        run: dotnet publish OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP/OpenSpartan.Forerunner.MCP.csproj --configuration Release --runtime win-x64 --self-contained true -p:PublishSingleFile=true -o publish/windows
      
      - name: Publish macOS
        run: dotnet publish OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP/OpenSpartan.Forerunner.MCP.csproj --configuration Release --runtime osx-x64 --self-contained true -p:PublishSingleFile=true -o publish/macos
      
      - name: Publish Linux
        run: dotnet publish OpenSpartan.HaloInfinite.MCP/OpenSpartan.Forerunner.MCP/OpenSpartan.Forerunner.MCP.csproj --configuration Release --runtime linux-x64 --self-contained true -p:PublishSingleFile=true -o publish/linux
      
      - name: Zip Windows release
        run: cd publish/windows && zip -r ../../OpenSpartan.Forerunner.MCP-windows-x64.zip *
      
      - name: Zip macOS release
        run: cd publish/macos && zip -r ../../OpenSpartan.Forerunner.MCP-macos-x64.zip *
      
      - name: Zip Linux release
        run: cd publish/linux && zip -r ../../OpenSpartan.Forerunner.MCP-linux-x64.zip *
      
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            OpenSpartan.Forerunner.MCP-windows-x64.zip
            OpenSpartan.Forerunner.MCP-macos-x64.zip
            OpenSpartan.Forerunner.MCP-linux-x64.zip
          tag_name: ${{ steps.get_version.outputs.VERSION }}